"""empty message

Revision ID: 9cd190dbf801
Revises: fc2869a4885e
Create Date: 2020-05-05 15:09:01.311526

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from bdc_db.models.asset import AssetMV

# revision identifiers, used by Alembic.
revision = '9cd190dbf801'
down_revision = 'fc2869a4885e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(f'DROP INDEX idx_assets_mv_item_id;')
    op.execute(f'DROP MATERIALIZED VIEW {AssetMV.__table__};')
    op.add_column('collection_items', sa.Column('assets_json', postgresql.JSONB()))
    op.execute('''UPDATE collection_items
                  SET
                  assets_json = z.assets
                  FROM
                  (SELECT x.item_id as item_id , json_object_agg(x.band, x.url)::jsonb || json_build_object('thumbnail', json_build_object('href', collection_items.quicklook))::jsonb as assets
                  FROM collection_items,
                      (SELECT collection_items.id as item_id, bands.common_name as band, json_build_object('href', assets.url) as url
                      FROM collection_items, assets, bands
                      WHERE assets.collection_item_id = collection_items.id and assets.band_id = bands.id) x
                  WHERE collection_items.id = x.item_id
                  GROUP BY x.item_id, collection_items.quicklook) as z
                  WHERE z.item_id = collection_items.id''')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('collection_items', 'assets_json')
    op.execute(
    f'''
    CREATE MATERIALIZED VIEW {AssetMV.__table__} AS
    SELECT x.item_id, json_object_agg(x.band, x.url)::jsonb || json_build_object('thumbnail', json_build_object('href', collection_items.quicklook))::jsonb as assets
    FROM collection_items,
        (SELECT collection_items.id as item_id, bands.common_name as band, json_build_object('href', assets.url) as url
        FROM collection_items, assets, bands
        WHERE assets.collection_item_id = collection_items.id and assets.band_id = bands.id) x
    WHERE collection_items.id = x.item_id
    GROUP BY x.item_id, collection_items.quicklook;
    ''')
    op.execute(f'CREATE INDEX idx_assets_mv_item_id on {AssetMV.__table__}(item_id)')
    # ### end Alembic commands ###
